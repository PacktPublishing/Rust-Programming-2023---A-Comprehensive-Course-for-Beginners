{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh7840\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
/*\
\
Data Types:\
\
A data type, in programming, is a classification that specifies which type of value a variable has and what type of mathematical, \
relational or logical operations can be applied to it without causing an error.\
\
Variables:\
\
Variables are used to store information to be referenced and manipulated in a computer program.\
\
Rust is a statically typed language. Every value in rust is of a certain data type.\
The compiler automatically infers the data type of a variable based on the value assigned to it\
\
The Type System embodies all the different types of values the language supports.\
The type system verifies the supported values, before they are stored or manipulated\
by the program. This process just helps to ensure that the code runs as expected\
\
*/\
\
// How do we declare variables in Rust? \
\
// use the let keyword to declare variables in Rust\
\
fn main() \{\
    let financial_management = "Bank Of America"; // string type \
    let credit_score = "800"; //integer type (are whole numbers no decimals)\
    // float types take decimals\
    let account_active = true; // boolean type\
    \
    println!("My current investor portfolio is managed by: \{\}", financial_management);\
    println!("My credit score is: \{\}", credit_score);\
    println!("Account Active: \{\}", account_active);\
    \
    let switch = false;\
    let volume = 10;\
    \
    println!("Launch Mode is set to: \{\}", switch);\
    println!("Current Fuel Level is: \{\}", volume);\
\}\
\
/*\
Exercise: Create two variables in the main function called switch and volume. Assign one of the variables to false and the \
other variable the value of 10 and print the results using the print macro twice. \
Add strings to provide logical context to the printed results of your choosing\
*/\
\
 \
}