{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww15240\viewh13500\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
/*\
\
If you want to repeat a block of code multiple times, which there can be many instances in your program to do so\
such as basic calculations for example, you can use loops.\
\
In general, programming instructions happen sequentially: \
This means that the first statement in a function would be executed first followed by the enxt and so on \
and so forth.\
\
Languages in programming generally\
allow us to manipulate the execution paths and customize them more for preference \
\
\
Rust has 3 different main type of core loops for executing blocks of code \
\
1. while\
2. loop\
3. for\
\
\
\
*/\
\
\
\
fn main()\{\
\
    // for loop example  - we call this a definite loop because we run it until\
    \
   for a in 1..20\{ // 20 is not inclusive\
      if a==2 \{\
      \
      // The continue statement skips the subsequent statements \
      // in the current iteration and takes the control back to the beginning of the loop\
         continue;\
      \}\
      println!("a is \{\}",a);\
   \}\
   \
   // an indefinite loop is used when the number of iterations in a loop is indeterminate or unknown\
   \
   let mut b = 0;\
   while b < 5\{\
      b = b + 1;\
      println!("loop b value is \{\}",b);\
   \}\
   \
   //  also indefinite example\
   \
     //while true\
\
   let mut c = 0;\
   loop \{\
      c-=1;\
      println!("c=\{\}",c);\
\
      if c==-10 \{\
      // breaks ends the loop and moves control to the next command outside the loop.\
         break;\
      \}\
   \}\
   \
   \
   // Exercise Solution\
   \
    let mut count: u32 = 0;\
\
    println!("Let's count until infinity!");\
\
    // Infinite loop\
    loop \{\
        count += 1;\
\
        if count == 3 \{\
            println!("Welcome to miami!");\
\
            // Skip the rest of this iteration\
            continue;\
        \}\
\
        println!("\{\}", count);\
\
        if count == 5 \{\
            println!("Time to call it a dat!");\
\
            // Exit this loop\
            break;   \
        \}\
    \}\
   \
\}\
\
/*\
\
Exericse: How To Loop in Rust\
\
1. Create a unsigned mutable variable called count of 32 bits\
2. Write an infinite loop that increments counts +1 and stores the value in count and has the following conditions:\
3. If count is equal to 3 then print the string literal "welcome to miami!" in the console\
4. If the count equals 5 then print the string literal "Time to call it a day!" and then exit the loop.\
\
*/}