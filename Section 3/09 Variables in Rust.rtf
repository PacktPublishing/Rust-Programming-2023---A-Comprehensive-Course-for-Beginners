{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh7840\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /*\
\
The Variable Rule Book in Rust\
\
When it comes to Rust there are different ways to name a variable \
\
1. You can name variables with letters, digits, and the underscore character.\
\
2. Variables must begin with either an underscore or an letter\
\
3. Since Rust is case sensitive, upperscore and lowerscore variables are distinct \
\
Data types do not have to be statically declared and are optional.\
The data type is applied from the value assigned to the variable.\
\
Immutability\
Variables are immutable by default \uc0\u8722  \
read only in Rust. This means that the value of a variable cannot change by default\
once it is assigned. \
\
We can apply the mut keyword in order to make the variable mutable. \
\
*/\
\
fn main() \{\
    \
    let mut x = -3;\
    x = 2;\
    println!("\{\}",x);\
    \
    // Solution\
    let mut y = 12;\
    y = 15;\
    println!("\{\}",y);\
\}\
\
/*\
\
// Exercise\
\
1. Create a mutable numerical variable y of the value initialized to 12\
2. Change the value to 15 and print the result in the main function\
\
*/\
}